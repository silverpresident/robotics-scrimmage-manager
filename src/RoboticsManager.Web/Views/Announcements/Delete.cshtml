@using RoboticsManager.Web.Helpers
@using RoboticsManager.Lib.Models
@model Announcement
@{
    ViewData["Title"] = "Delete Announcement";
}

<div class="card">
    <div class="card-header bg-danger text-white">
        <h4 class="mb-0">
            <i class="bi bi-exclamation-triangle"></i> Delete Announcement
        </h4>
    </div>
    <div class="card-body">
        <div class="alert alert-warning">
            <h5 class="alert-heading">
                <i class="bi bi-exclamation-circle"></i> Warning
            </h5>
            <p>
                Are you sure you want to delete this announcement?
                This action cannot be undone.
            </p>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Announcement Content</h5>
                    <div>
                        @{
                            string priorityClass = Model.Priority switch
                            {
                                AnnouncementPriority.Info => "info",
                                AnnouncementPriority.Warning => "warning",
                                AnnouncementPriority.Danger => "danger",
                                AnnouncementPriority.Primary => "primary",
                                AnnouncementPriority.Secondary => "secondary",
                                _ => "info"
                            };
                        }
                        <span class="badge bg-@priorityClass">@Model.Priority</span>
                        @if (Model.IsVisible)
                        {
                            <span class="badge bg-success ms-1">Visible</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary ms-1">Hidden</span>
                        }
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="announcement-content">
                    @Html.Raw(Model.RenderedBody ?? MarkdownHelper.ToHtml(Model.Body))
                </div>
            </div>
            <div class="card-footer">
                <small class="text-muted">
                    Created: @Model.CreatedAt.ToLocalTime().ToString("g")
                </small>
                @if (Model.UpdatedAt.HasValue)
                {
                    <small class="text-muted ms-3">
                        Last Updated: @Model.UpdatedAt.Value.ToLocalTime().ToString("g")
                    </small>
                }
            </div>
        </div>

        <form asp-action="Delete" method="post">
            <input type="hidden" asp-for="Id" />
            <button type="submit" class="btn btn-danger">
                <i class="bi bi-trash"></i> Delete Announcement
            </button>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </form>
    </div>
</div>

<style>
    .announcement-content {
        max-height: 300px;
        overflow-y: auto;
    }

    .announcement-content::-webkit-scrollbar {
        width: 6px;
    }

    .announcement-content::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 3px;
    }

    .announcement-content::-webkit-scrollbar-thumb {
        background: var(--primary-color);
        border-radius: 3px;
    }

    .announcement-content::-webkit-scrollbar-thumb:hover {
        background: var(--secondary-color);
    }

    .announcement-content h1 { font-size: 1.5rem; }
    .announcement-content h2 { font-size: 1.3rem; }
    .announcement-content h3 { font-size: 1.2rem; }
    .announcement-content h4,
    .announcement-content h5,
    .announcement-content h6 { font-size: 1.1rem; }

    .announcement-content p:last-child { margin-bottom: 0; }
</style>
